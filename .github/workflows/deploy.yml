name: Cache Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_USERNAME: lilei6809
  IMAGE_NAME: cache-service
  AWS_REGION: eu-west-1
  EC2_INSTANCE_ID: i-021ab865f704e0543

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set and verify AWS region
        run: |
          aws configure set region eu-west-1
          aws configure get region
      - name: Verify AWS CLI installation
        run: |
          aws --version
          
      - name: Verify AWS credentials
        run: |
          echo "AWS CLI is configured for region: $AWS_DEFAULT_REGION"
          aws sts get-caller-identity

      - name: Verify STS permissions
        run: |
          aws sts get-caller-identity
          aws sts get-session-token

      - name: Test IAM Permissions
        run: |
          echo "Testing EC2 permissions:"
          aws ec2 describe-instances --instance-ids ${{ env.EC2_INSTANCE_ID }}

          echo "Testing SSM permissions:"
          aws ssm describe-instance-information
      - name: Debug AWS configuration
        run: |
          echo "Configured AWS Region:"
          aws configure get region || echo "Failed to get region"

          echo "EC2 Instance ID: ${{ env.EC2_INSTANCE_ID }}"

          echo "Instance State:"
          aws ec2 describe-instances --instance-ids "${{ env.EC2_INSTANCE_ID }}" --query 'Reservations[].Instances[].State.Name' --output text || echo "Failed to describe instances"

          echo "Instance Details:"
          aws ec2 describe-instances --instance-ids "${{ env.EC2_INSTANCE_ID }}" --query 'Reservations[].Instances[].[InstanceId,InstanceType,PublicIpAddress,PrivateIpAddress]' --output table || echo "Failed to get instance details"
        env:
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install
        working-directory: .  # 这会在根目录运行，构建所有模块

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./cache-service
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
      - name: Debug - Print Instance ID
        run: |
          echo "Using Instance ID: ${{ env.EC2_INSTANCE_ID }}"

#1
      - name: Deploy to EC2
        run: |
          aws ssm send-command \
            --region eu-west-1 \
            --instance-ids i-021ab865f704e0543 \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}",
              "docker stop cache-service || true",
              "docker rm cache-service || true",
              "docker run -d --name cache-service -p 8080:8080 ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
            ]' \
            --output text