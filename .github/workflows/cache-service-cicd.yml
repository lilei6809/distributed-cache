name: Cache Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  applicationfolder: cache-service
  AWS_REGION: eu-west-1
  DOCKER_HUB_USERNAME: lilei6809
  IMAGE_NAME: cache-service
  role-duration-seconds: 1200

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Select instance ID
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].InstanceId' --output text | select-string -Pattern "i-03761e9f0834de182")
          echo "Using Instance ID: $INSTANCE_ID"

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install
        working-directory: .  # 这会在根目录运行，构建所有模块

      - name: Build Docker image
        run: |
          cd ${{ env.applicationfolder }}
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.applicationfolder }}
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh


      - name: Set up AWS CLI
        run: |
          aws configure set region ${{ env.AWS_REGION }}

      

      - name: Start Session and Deploy
        run: |
          echo "Using Instance ID: $INSTANCE_ID"
          aws ssm start-session --target $INSTANCE_ID --document-name "AWS-StartInteractiveCommand" --parameters 'command="sudo docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} && sudo docker stop cache-service || true && sudo docker rm cache-service || true && sudo docker run -d --name cache-service -p 8080:8080 ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"'
