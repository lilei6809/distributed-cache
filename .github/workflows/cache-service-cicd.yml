name: Cache Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  applicationfolder: cache-service
  AWS_REGION: eu-west-1
  S3BUCKET: cache-service-stack-webappdeploymentbucket-bywaizukrxve
  DOCKER_HUB_USERNAME: lilei6809
  IMAGE_NAME: cache-service
  EC2_HOST: 3.249.105.226
  SSH_HOST: ec2-3-249-105-226.eu-west-1.compute.amazonaws.com
  role-to-assume: arn:aws:iam::533267241654:policy/GithubActionsDeployerPolicy
  role-duration-seconds: 1200

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

#      - uses: aws-actions/configure-aws-credentials@v1
#        with:
#          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
#          role-session-name: GitHub-Action-Role
#          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

#      - name: Build with Maven
#        run: mvn clean install
      - name: Build with Maven
        run: mvn clean install
        working-directory: .  # 这会在根目录运行，构建所有模块

      - name: Build Docker image
        run: |
          cd ${{ env.applicationfolder }}
          docker build -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.applicationfolder }}
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy to EC2
        run: |
          aws ssm start-session --target i-1234567890abcdef0 --document-name AWS-StartInteractiveCommand --parameters command="sudo docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} && sudo docker stop cache-service || true && sudo docker rm cache-service || true && sudo docker run -d --name cache-service -p 8080:8080 ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
#      - name: Upload Artifact to s3
#        working-directory: ${{ env.applicationfolder }}/target
#        run: aws s3 cp *.jar s3://${{ env.S3BUCKET }}/

#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    environment: Dev
#    steps:
#      - uses: actions/checkout@v2
#      - uses: aws-actions/configure-aws-credentials@v1
#        with:
#          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
#          role-session-name: GitHub-Action-Role
#          aws-region: ${{ env.AWS_REGION }}
#      - run: |
#          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
#          commit_hash=`git rev-parse HEAD`
#          aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
